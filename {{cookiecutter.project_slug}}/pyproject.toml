[tool.stela]
default_environment = "development"
config_file_extension = "TOML"
config_file_prefix = "env-"

[tool.coverage.report]
fail_under = 80

[tool.pytest]
addopts = '--pydocstyle'

[tool.black]
line-length = {{ cookiecutter.line_length }}
target-version = ['{{ cookiecutter.black_target_version }}']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \venv
    | \.aws-sam
    | _build
    | buck-out
    | build
    | dist
    | migrations
    | node_modules
    | dependencies
  )/
)
'''

[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
authors = ["Noverde Tech <devs@noverde.com.br>"]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"
arrow = "*"
aws_lambda_context = "*"
loguru = "*"
marshmallow = "*"
marshmallow_enum = "*"
python-json-logger = "*"
sentry-sdk = "*"
stela = "*"
typing_extensions = "*"
{% if cookiecutter.database == "DynamoDB (recommended)" or cookiecutter.database == "Both" %}
# DynamoDB Libraries
pynamodb = "*"
marshmallow-pynamo-db = "*"
{% endif %}
{% if cookiecutter.database == "RDS" or cookiecutter.database == "Both" %}
# Postgres Libraries
psycopg2 = "*"
marshmallow-sqlalchemy = "*"
SQLAlchemy = "*"
{% endif %}
[tool.poetry.dev-dependencies]
aws-sam-cli = {version="*", markers="platform_system != 'Windows'"}
black = {version = "*", allow-prereleases = true}
factory_boy = "*"
freezegun = "*"
ipdb = "*"
pre-commit = "*"
pytest-black = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-mypy = "*"
pytest-pydocstyle = "*"
pytest-watch = "*"
pytest-xdist ="*"
wheel = "*"
{% if cookiecutter.database == "RDS" or cookiecutter.database == "Both" %}
alembic = "*"
pytest-postgresql = "*"
{% endif %}

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
