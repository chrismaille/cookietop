AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: {{ cookiecutter.project_description }}

Globals:
  Function:
    Runtime: python{{ cookiecutter.python_version }}
    Tracing: Active
    Layers:
      - Ref: {{cookiecutter.project_name_camel}}DepLayer
      - arn:aws:lambda:us-east-1:898466741470:layer:psycopg2-py37:3
    Environment:
      Variables:
        # Use file local.json to override these values in sam local start-api
        {% raw %}
        ENVIRONMENT: '{{resolve:ssm:NoverdeEnvironment:1}}'
        LOGGER_LEVEL: '{{resolve:ssm:/{% endraw %}{{cookiecutter.project_name_camel}}{% raw %}/settings/logLevel:1}}'
        SENTRY_ENDPOINT: '{{resolve:ssm:/{% endraw %}{{cookiecutter.project_name_camel}}{% raw %}/endpoints/sentry:1}}'
        DATABASE_SQL_URL: '{{resolve:ssm:/{% endraw %}{{cookiecutter.project_name_camel}}{% raw %}/endpoints/rds:3}}'
        {% endraw %}
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type,Authorization'"

Resources:
  # API Gateway Handlers
  HealthCheck:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: {{cookiecutter.project_slug}}-health-check
      CodeUri: {{cookiecutter.project_slug}}
      Handler: interface.handlers.health.health_check
      Policies:
        - AWSLambdaFullAccess
      Tags:
        noverde:
          service:{{ cookiecutter.project_name_camel }}
      Events:
        GetHealth:
          Type: Api
          Properties:
            Path: /health
            Method: get
            RestApiId:
              Ref: {{cookiecutter.project_name_camel}}Api

  # Step Functions Handlers
  Find{{cookiecutter.domain_class}}Instance:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: noverde_test_project-find-{{cookiecutter.domain_slug}}-instance
      CodeUri: {{cookiecutter.project_slug}}
      Handler: interface.tasks.create_{{cookiecutter.domain_slug}}.find_{{cookiecutter.domain_slug}}_instance
      Policies:
        - AWSLambdaFullAccess
      Role: !GetAtt [ LambdaExecutionRole, Arn ]
      Tags:
        noverde:
          service:NoverdeTestProject

  # Step Function Machine
  {{cookiecutter.domain_class}}CreateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      DefinitionString:
        !Sub
        - |-
          {
            "Comment": "Create {{cookiecutter.domain}} State Machine",
            "StartAt": "Find{{cookiecutter.domain_class}}Instance",
            "States": {
              "Find{{cookiecutter.domain_class}}Instance": {
                "Type": "Task",
                "Resource": "${lambdaArn}",
                "End": true
              }
            }
          }
        - {lambdaArn: !GetAtt [ MyLambdaFunction, Arn ]}
      RoleArn: !GetAtt [ StatesExecutionRole, Arn ]

  # Lambda Layer Configuration
  {{cookiecutter.project_name_camel}}DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sam-{{cookiecutter.project_slug}}-dependencies
      Description: Dependencies for sam app [{{cookiecutter.project_slug}}]
      ContentUri: dependencies
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: 'MIT'

  # Api Gateway Configuration
  {{cookiecutter.project_name_camel}}Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: {{cookiecutter.project_name_camel}}Api
      OpenApiVersion: "3.0.3"
      TracingEnabled: true
      StageName: v1

  # IAM Roles
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  StatesExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - !Sub states.${AWS::Region}.amazonaws.com
            Action: "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: StatesExecutionPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:InvokeFunction"
                Resource: "*"