AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: {{ cookiecutter.project_description }}

Globals:
  Function:
    Runtime: python{{ cookiecutter.python_version }}
    Layers:
      - Ref: {{ cookiecutter.project_slug }}DepLayer
    Environment:
      Variables:
        ENVIRONMENT: '{{resolve:ssm:NoverdeEnvironment:1}}'
        LOG_LEVEL: '{{resolve:ssm:NoverdeEnvironmentLogLevel:1}}'
        SENTRY_ENDPOINT: '{{resolve:ssm:/sentry/endpoints/{{ cookiecutter.project_slug }}:1}}'
  Api:
    Cors:
      AllowOrigin: "'*'"
      AllowHeaders: "'Content-Type,Authorization'"

Resources:
  #  Handlers Configuration
  HealthCheck:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: {{ cookiecutter.project_slug }}-health-check
      CodeUri: {{ cookiecutter.project_slug }}
      Handler: handlers.health.health_check
      Policies:
        - AWSLambdaFullAccess
    Tags:
      noverde:service: {{ cookiecutter.project_name }}
    Events:
      GetHealth:
        Type: Api
        Properties:
          Path: /health
          Method: get
          RestApiId:
            Ref: {{ cookiecutter.project_slug }}Api

  # Lambda Layer Configuration
  {{ cookiecutter.project_slug }}DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: sam-{{ cookiecutter.project_slug }}-dependencies
      Description: Dependencies for sam app [{{ cookiecutter.project_slug }}]
      ContentUri: dependencies
      CompatibleRuntimes:
        - python3.7
      LicenseInfo: 'MIT'

  # Api Gateway Configuration
  {{ cookiecutter.project_slug }}Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: {{ cookiecutter.project_slug }}-api
      OpenApiVersion: "3.0.3"
      TracingEnabled: true
      StageName: v1